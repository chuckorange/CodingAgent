[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "devagent"
version = "0.1.0"
description = "Local AI coding agent for understanding codebases and making code changes"
authors = [
    {name = "Chuck Lin", email = "chucko.lin@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # Core orchestration
    "langgraph>=0.0.60",
    "langchain>=0.1.0",
    
    # LLM clients
    "openai>=1.10.0",
    "anthropic>=0.18.0",
    
    # CLI and UI
    "click>=8.1.0",
    "rich>=13.0.0",
    
    # File operations and search
    "gitpython>=3.1.0",
    "pygithub>=1.59.0",
    
    # Code analysis
    "tree-sitter>=0.20.0",
    "tree-sitter-python>=0.20.0",
    "libcst>=1.0.0",
    
    # Vector search for retrieval
    "sentence-transformers>=2.2.0",
    "faiss-cpu>=1.7.0",
    
    # Docker integration
    "docker>=6.0.0",
    
    # Utilities
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "tenacity>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[project.scripts]
devagent = "devagent.cli:main"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=devagent --cov-report=html --cov-report=term-missing"